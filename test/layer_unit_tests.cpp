#include "gtest/gtest.h"
#include <gtest/gtest.h>
#include "test_helpers.hpp"
#include "Layer.hpp"
#include "utils.hpp"

typedef ::testing::Types<float, double> TestTypes;

template <typename T>
class LayerUnitTests : public ::testing::Test {};

TYPED_TEST_SUITE(LayerUnitTests, TestTypes);

TYPED_TEST(LayerUnitTests, DenseLayerInit) {
    Layers::DenseLayer<TypeParam> layer {784, 128, 1, 2, 3, 4};

    EXPECT_EQ(layer.getWeights().size(), 784);
    EXPECT_EQ(layer.getWeights()[0].size(), 128);
    EXPECT_EQ(layer.getBiases()[0].size(), 128);
    EXPECT_EQ(layer.getBiasMomentums()[0].size(), 128);
    EXPECT_EQ(layer.getBiasCache()[0].size(), 128);
    EXPECT_EQ(layer.getWeightRegularizerL1(), 1);
    EXPECT_EQ(layer.getWeightRegularizerL2(), 2);
    EXPECT_EQ(layer.getBiasRegularizerL1(), 3);
    EXPECT_EQ(layer.getBiasRegularizerL2(), 4);
}

template<typename T>
void populateVec2dWithSequentialData(Vec2d<T>& vec, int rows, int cols, int start = 0) {
    vec.resize(rows, std::vector<T>(cols));
    int counter = start;
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            vec[i][j] = counter;
            counter += 1;
            if (counter > 500) counter = start;
        }
    }
}

TYPED_TEST(LayerUnitTests, DenseLayerCompute) {
    Vec2d<TypeParam> weights;
    populateVec2dWithSequentialData(weights, 50, 50);

    Vec2d<TypeParam> biases;
    populateVec2dWithSequentialData(biases, 1, 50);

    Layers::DenseLayer<TypeParam> layer {weights, biases};
    
    Vec2d<TypeParam> inputs;
    populateVec2dWithSequentialData(inputs, 50, 50);

    layer.compute(inputs);

    Vec2d<TypeParam> expected {{342900, 339116, 330322, 316518, 297704, 298930, 300156, 301382, 302608, 303834, 305060, 306286, 307512, 308738, 309964, 311190, 312416, 313642, 314868, 316094, 317320, 318546, 319772, 320998, 322224, 323450, 324676, 325902, 327128, 328354, 329580, 330806, 332032, 333258, 334484, 335710, 336936, 338162, 339388, 340614, 341840, 343066, 344292, 345518, 346744, 347970, 349196, 350422, 351648, 352874, },
                               {1000600, 974266, 942922, 906568, 865204, 868930, 872656, 876382, 880108, 883834, 887560, 891286, 895012, 898738, 902464, 906190, 909916, 913642, 917368, 921094, 924820, 928546, 932272, 935998, 939724, 943450, 947176, 950902, 954628, 958354, 962080, 965806, 969532, 973258, 976984, 980710, 984436, 988162, 991888, 995614, 999340, 1003066, 1006792, 1010518, 1014244, 1017970, 1021696, 1025422, 1029148, 1032874, },
                               {1658300, 1609416, 1555522, 1496618, 1432704, 1438930, 1445156, 1451382, 1457608, 1463834, 1470060, 1476286, 1482512, 1488738, 1494964, 1501190, 1507416, 1513642, 1519868, 1526094, 1532320, 1538546, 1544772, 1550998, 1557224, 1563450, 1569676, 1575902, 1582128, 1588354, 1594580, 1600806, 1607032, 1613258, 1619484, 1625710, 1631936, 1638162, 1644388, 1650614, 1656840, 1663066, 1669292, 1675518, 1681744, 1687970, 1694196, 1700422, 1706648, 1712874, },
                               {2316000, 2244566, 2168122, 2086668, 2000204, 2008930, 2017656, 2026382, 2035108, 2043834, 2052560, 2061286, 2070012, 2078738, 2087464, 2096190, 2104916, 2113642, 2122368, 2131094, 2139820, 2148546, 2157272, 2165998, 2174724, 2183450, 2192176, 2200902, 2209628, 2218354, 2227080, 2235806, 2244532, 2253258, 2261984, 2270710, 2279436, 2288162, 2296888, 2305614, 2314340, 2323066, 2331792, 2340518, 2349244, 2357970, 2366696, 2375422, 2384148, 2392874, },
                               {2973700, 2879716, 2780722, 2676718, 2567704, 2578930, 2590156, 2601382, 2612608, 2623834, 2635060, 2646286, 2657512, 2668738, 2679964, 2691190, 2702416, 2713642, 2724868, 2736094, 2747320, 2758546, 2769772, 2780998, 2792224, 2803450, 2814676, 2825902, 2837128, 2848354, 2859580, 2870806, 2882032, 2893258, 2904484, 2915710, 2926936, 2938162, 2949388, 2960614, 2971840, 2983066, 2994292, 3005518, 3016744, 3027970, 3039196, 3050422, 3061648, 3072874, },
                               {3631400, 3514866, 3393322, 3266768, 3135204, 3148930, 3162656, 3176382, 3190108, 3203834, 3217560, 3231286, 3245012, 3258738, 3272464, 3286190, 3299916, 3313642, 3327368, 3341094, 3354820, 3368546, 3382272, 3395998, 3409724, 3423450, 3437176, 3450902, 3464628, 3478354, 3492080, 3505806, 3519532, 3533258, 3546984, 3560710, 3574436, 3588162, 3601888, 3615614, 3629340, 3643066, 3656792, 3670518, 3684244, 3697970, 3711696, 3725422, 3739148, 3752874, },
                               {4289100, 4150016, 4005922, 3856818, 3702704, 3718930, 3735156, 3751382, 3767608, 3783834, 3800060, 3816286, 3832512, 3848738, 3864964, 3881190, 3897416, 3913642, 3929868, 3946094, 3962320, 3978546, 3994772, 4010998, 4027224, 4043450, 4059676, 4075902, 4092128, 4108354, 4124580, 4140806, 4157032, 4173258, 4189484, 4205710, 4221936, 4238162, 4254388, 4270614, 4286840, 4303066, 4319292, 4335518, 4351744, 4367970, 4384196, 4400422, 4416648, 4432874, },
                               {4946800, 4785166, 4618522, 4446868, 4270204, 4288930, 4307656, 4326382, 4345108, 4363834, 4382560, 4401286, 4420012, 4438738, 4457464, 4476190, 4494916, 4513642, 4532368, 4551094, 4569820, 4588546, 4607272, 4625998, 4644724, 4663450, 4682176, 4700902, 4719628, 4738354, 4757080, 4775806, 4794532, 4813258, 4831984, 4850710, 4869436, 4888162, 4906888, 4925614, 4944340, 4963066, 4981792, 5000518, 5019244, 5037970, 5056696, 5075422, 5094148, 5112874, },
                               {5604500, 5420316, 5231122, 5036918, 4837704, 4858930, 4880156, 4901382, 4922608, 4943834, 4965060, 4986286, 5007512, 5028738, 5049964, 5071190, 5092416, 5113642, 5134868, 5156094, 5177320, 5198546, 5219772, 5240998, 5262224, 5283450, 5304676, 5325902, 5347128, 5368354, 5389580, 5410806, 5432032, 5453258, 5474484, 5495710, 5516936, 5538162, 5559388, 5580614, 5601840, 5623066, 5644292, 5665518, 5686744, 5707970, 5729196, 5750422, 5771648, 5792874, },
                               {6262200, 6055466, 5843722, 5626968, 5405204, 5428930, 5452656, 5476382, 5500108, 5523834, 5547560, 5571286, 5595012, 5618738, 5642464, 5666190, 5689916, 5713642, 5737368, 5761094, 5784820, 5808546, 5832272, 5855998, 5879724, 5903450, 5927176, 5950902, 5974628, 5998354, 6022080, 6045806, 6069532, 6093258, 6116984, 6140710, 6164436, 6188162, 6211888, 6235614, 6259340, 6283066, 6306792, 6330518, 6354244, 6377970, 6401696, 6425422, 6449148, 6472874, },
                               {329746, 326914, 319072, 306220, 288358, 290035, 291712, 293389, 295066, 296743, 298420, 300097, 301774, 303451, 305128, 306805, 308482, 310159, 311836, 313513, 315190, 316867, 318544, 320221, 321898, 323575, 325252, 326929, 328606, 330283, 331960, 333637, 335314, 336991, 338668, 340345, 342022, 343699, 345376, 347053, 348730, 350407, 352084, 353761, 355438, 357115, 358792, 360469, 362146, 363823, },
                               {987446, 961563, 930670, 894767, 853854, 857530, 861206, 864882, 868558, 872234, 875910, 879586, 883262, 886938, 890614, 894290, 897966, 901642, 905318, 908994, 912670, 916346, 920022, 923698, 927374, 931050, 934726, 938402, 942078, 945754, 949430, 953106, 956782, 960458, 964134, 967810, 971486, 975162, 978838, 982514, 986190, 989866, 993542, 997218, 1000894, 1004570, 1008246, 1011922, 1015598, 1019274, },
                               {1645146, 1596713, 1543270, 1484817, 1421354, 1427530, 1433706, 1439882, 1446058, 1452234, 1458410, 1464586, 1470762, 1476938, 1483114, 1489290, 1495466, 1501642, 1507818, 1513994, 1520170, 1526346, 1532522, 1538698, 1544874, 1551050, 1557226, 1563402, 1569578, 1575754, 1581930, 1588106, 1594282, 1600458, 1606634, 1612810, 1618986, 1625162, 1631338, 1637514, 1643690, 1649866, 1656042, 1662218, 1668394, 1674570, 1680746, 1686922, 1693098, 1699274, },
                               {2302846, 2231863, 2155870, 2074867, 1988854, 1997530, 2006206, 2014882, 2023558, 2032234, 2040910, 2049586, 2058262, 2066938, 2075614, 2084290, 2092966, 2101642, 2110318, 2118994, 2127670, 2136346, 2145022, 2153698, 2162374, 2171050, 2179726, 2188402, 2197078, 2205754, 2214430, 2223106, 2231782, 2240458, 2249134, 2257810, 2266486, 2275162, 2283838, 2292514, 2301190, 2309866, 2318542, 2327218, 2335894, 2344570, 2353246, 2361922, 2370598, 2379274, },
                               {2960546, 2867013, 2768470, 2664917, 2556354, 2567530, 2578706, 2589882, 2601058, 2612234, 2623410, 2634586, 2645762, 2656938, 2668114, 2679290, 2690466, 2701642, 2712818, 2723994, 2735170, 2746346, 2757522, 2768698, 2779874, 2791050, 2802226, 2813402, 2824578, 2835754, 2846930, 2858106, 2869282, 2880458, 2891634, 2902810, 2913986, 2925162, 2936338, 2947514, 2958690, 2969866, 2981042, 2992218, 3003394, 3014570, 3025746, 3036922, 3048098, 3059274, },
                               {3618246, 3502163, 3381070, 3254967, 3123854, 3137530, 3151206, 3164882, 3178558, 3192234, 3205910, 3219586, 3233262, 3246938, 3260614, 3274290, 3287966, 3301642, 3315318, 3328994, 3342670, 3356346, 3370022, 3383698, 3397374, 3411050, 3424726, 3438402, 3452078, 3465754, 3479430, 3493106, 3506782, 3520458, 3534134, 3547810, 3561486, 3575162, 3588838, 3602514, 3616190, 3629866, 3643542, 3657218, 3670894, 3684570, 3698246, 3711922, 3725598, 3739274, },
                               {4275946, 4137313, 3993670, 3845017, 3691354, 3707530, 3723706, 3739882, 3756058, 3772234, 3788410, 3804586, 3820762, 3836938, 3853114, 3869290, 3885466, 3901642, 3917818, 3933994, 3950170, 3966346, 3982522, 3998698, 4014874, 4031050, 4047226, 4063402, 4079578, 4095754, 4111930, 4128106, 4144282, 4160458, 4176634, 4192810, 4208986, 4225162, 4241338, 4257514, 4273690, 4289866, 4306042, 4322218, 4338394, 4354570, 4370746, 4386922, 4403098, 4419274, },
                               {4933646, 4772463, 4606270, 4435067, 4258854, 4277530, 4296206, 4314882, 4333558, 4352234, 4370910, 4389586, 4408262, 4426938, 4445614, 4464290, 4482966, 4501642, 4520318, 4538994, 4557670, 4576346, 4595022, 4613698, 4632374, 4651050, 4669726, 4688402, 4707078, 4725754, 4744430, 4763106, 4781782, 4800458, 4819134, 4837810, 4856486, 4875162, 4893838, 4912514, 4931190, 4949866, 4968542, 4987218, 5005894, 5024570, 5043246, 5061922, 5080598, 5099274, },
                               {5591346, 5407613, 5218870, 5025117, 4826354, 4847530, 4868706, 4889882, 4911058, 4932234, 4953410, 4974586, 4995762, 5016938, 5038114, 5059290, 5080466, 5101642, 5122818, 5143994, 5165170, 5186346, 5207522, 5228698, 5249874, 5271050, 5292226, 5313402, 5334578, 5355754, 5376930, 5398106, 5419282, 5440458, 5461634, 5482810, 5503986, 5525162, 5546338, 5567514, 5588690, 5609866, 5631042, 5652218, 5673394, 5694570, 5715746, 5736922, 5758098, 5779274, },
                               {6249046, 6042763, 5831470, 5615167, 5393854, 5417530, 5441206, 5464882, 5488558, 5512234, 5535910, 5559586, 5583262, 5606938, 5630614, 5654290, 5677966, 5701642, 5725318, 5748994, 5772670, 5796346, 5820022, 5843698, 5867374, 5891050, 5914726, 5938402, 5962078, 5985754, 6009430, 6033106, 6056782, 6080458, 6104134, 6127810, 6151486, 6175162, 6198838, 6222514, 6246190, 6269866, 6293542, 6317218, 6340894, 6364570, 6388246, 6411922, 6435598, 6459274, },
                               {341642, 339762, 332872, 320972, 304062, 306190, 308318, 310446, 312574, 314702, 316830, 318958, 321086, 323214, 325342, 327470, 329598, 331726, 333854, 335982, 338110, 340238, 342366, 344494, 346622, 348750, 350878, 353006, 355134, 357262, 359390, 361518, 363646, 365774, 367902, 370030, 372158, 374286, 376414, 378542, 380670, 382798, 384926, 387054, 389182, 391310, 393438, 395566, 397694, 399822, },
                               {974292, 948860, 918418, 882966, 842504, 846130, 849756, 853382, 857008, 860634, 864260, 867886, 871512, 875138, 878764, 882390, 886016, 889642, 893268, 896894, 900520, 904146, 907772, 911398, 915024, 918650, 922276, 925902, 929528, 933154, 936780, 940406, 944032, 947658, 951284, 954910, 958536, 962162, 965788, 969414, 973040, 976666, 980292, 983918, 987544, 991170, 994796, 998422, 1002048, 1005674, },
                               {1631992, 1584010, 1531018, 1473016, 1410004, 1416130, 1422256, 1428382, 1434508, 1440634, 1446760, 1452886, 1459012, 1465138, 1471264, 1477390, 1483516, 1489642, 1495768, 1501894, 1508020, 1514146, 1520272, 1526398, 1532524, 1538650, 1544776, 1550902, 1557028, 1563154, 1569280, 1575406, 1581532, 1587658, 1593784, 1599910, 1606036, 1612162, 1618288, 1624414, 1630540, 1636666, 1642792, 1648918, 1655044, 1661170, 1667296, 1673422, 1679548, 1685674, },
                               {2289692, 2219160, 2143618, 2063066, 1977504, 1986130, 1994756, 2003382, 2012008, 2020634, 2029260, 2037886, 2046512, 2055138, 2063764, 2072390, 2081016, 2089642, 2098268, 2106894, 2115520, 2124146, 2132772, 2141398, 2150024, 2158650, 2167276, 2175902, 2184528, 2193154, 2201780, 2210406, 2219032, 2227658, 2236284, 2244910, 2253536, 2262162, 2270788, 2279414, 2288040, 2296666, 2305292, 2313918, 2322544, 2331170, 2339796, 2348422, 2357048, 2365674, },
                               {2947392, 2854310, 2756218, 2653116, 2545004, 2556130, 2567256, 2578382, 2589508, 2600634, 2611760, 2622886, 2634012, 2645138, 2656264, 2667390, 2678516, 2689642, 2700768, 2711894, 2723020, 2734146, 2745272, 2756398, 2767524, 2778650, 2789776, 2800902, 2812028, 2823154, 2834280, 2845406, 2856532, 2867658, 2878784, 2889910, 2901036, 2912162, 2923288, 2934414, 2945540, 2956666, 2967792, 2978918, 2990044, 3001170, 3012296, 3023422, 3034548, 3045674, },
                               {3605092, 3489460, 3368818, 3243166, 3112504, 3126130, 3139756, 3153382, 3167008, 3180634, 3194260, 3207886, 3221512, 3235138, 3248764, 3262390, 3276016, 3289642, 3303268, 3316894, 3330520, 3344146, 3357772, 3371398, 3385024, 3398650, 3412276, 3425902, 3439528, 3453154, 3466780, 3480406, 3494032, 3507658, 3521284, 3534910, 3548536, 3562162, 3575788, 3589414, 3603040, 3616666, 3630292, 3643918, 3657544, 3671170, 3684796, 3698422, 3712048, 3725674, },
                               {4262792, 4124610, 3981418, 3833216, 3680004, 3696130, 3712256, 3728382, 3744508, 3760634, 3776760, 3792886, 3809012, 3825138, 3841264, 3857390, 3873516, 3889642, 3905768, 3921894, 3938020, 3954146, 3970272, 3986398, 4002524, 4018650, 4034776, 4050902, 4067028, 4083154, 4099280, 4115406, 4131532, 4147658, 4163784, 4179910, 4196036, 4212162, 4228288, 4244414, 4260540, 4276666, 4292792, 4308918, 4325044, 4341170, 4357296, 4373422, 4389548, 4405674, },
                               {4920492, 4759760, 4594018, 4423266, 4247504, 4266130, 4284756, 4303382, 4322008, 4340634, 4359260, 4377886, 4396512, 4415138, 4433764, 4452390, 4471016, 4489642, 4508268, 4526894, 4545520, 4564146, 4582772, 4601398, 4620024, 4638650, 4657276, 4675902, 4694528, 4713154, 4731780, 4750406, 4769032, 4787658, 4806284, 4824910, 4843536, 4862162, 4880788, 4899414, 4918040, 4936666, 4955292, 4973918, 4992544, 5011170, 5029796, 5048422, 5067048, 5085674, },
                               {5578192, 5394910, 5206618, 5013316, 4815004, 4836130, 4857256, 4878382, 4899508, 4920634, 4941760, 4962886, 4984012, 5005138, 5026264, 5047390, 5068516, 5089642, 5110768, 5131894, 5153020, 5174146, 5195272, 5216398, 5237524, 5258650, 5279776, 5300902, 5322028, 5343154, 5364280, 5385406, 5406532, 5427658, 5448784, 5469910, 5491036, 5512162, 5533288, 5554414, 5575540, 5596666, 5617792, 5638918, 5660044, 5681170, 5702296, 5723422, 5744548, 5765674, },
                               {6235892, 6030060, 5819218, 5603366, 5382504, 5406130, 5429756, 5453382, 5477008, 5500634, 5524260, 5547886, 5571512, 5595138, 5618764, 5642390, 5666016, 5689642, 5713268, 5736894, 5760520, 5784146, 5807772, 5831398, 5855024, 5878650, 5902276, 5925902, 5949528, 5973154, 5996780, 6020406, 6044032, 6067658, 6091284, 6114910, 6138536, 6162162, 6185788, 6209414, 6233040, 6256666, 6280292, 6303918, 6327544, 6351170, 6374796, 6398422, 6422048, 6445674, },
                               {378588, 377660, 371722, 360774, 344816, 347395, 349974, 352553, 355132, 357711, 360290, 362869, 365448, 368027, 370606, 373185, 375764, 378343, 380922, 383501, 386080, 388659, 391238, 393817, 396396, 398975, 401554, 404133, 406712, 409291, 411870, 414449, 417028, 419607, 422186, 424765, 427344, 429923, 432502, 435081, 437660, 440239, 442818, 445397, 447976, 450555, 453134, 455713, 458292, 460871, },
                               {961138, 936157, 906166, 871165, 831154, 834730, 838306, 841882, 845458, 849034, 852610, 856186, 859762, 863338, 866914, 870490, 874066, 877642, 881218, 884794, 888370, 891946, 895522, 899098, 902674, 906250, 909826, 913402, 916978, 920554, 924130, 927706, 931282, 934858, 938434, 942010, 945586, 949162, 952738, 956314, 959890, 963466, 967042, 970618, 974194, 977770, 981346, 984922, 988498, 992074, },
                               {1618838, 1571307, 1518766, 1461215, 1398654, 1404730, 1410806, 1416882, 1422958, 1429034, 1435110, 1441186, 1447262, 1453338, 1459414, 1465490, 1471566, 1477642, 1483718, 1489794, 1495870, 1501946, 1508022, 1514098, 1520174, 1526250, 1532326, 1538402, 1544478, 1550554, 1556630, 1562706, 1568782, 1574858, 1580934, 1587010, 1593086, 1599162, 1605238, 1611314, 1617390, 1623466, 1629542, 1635618, 1641694, 1647770, 1653846, 1659922, 1665998, 1672074, },
                               {2276538, 2206457, 2131366, 2051265, 1966154, 1974730, 1983306, 1991882, 2000458, 2009034, 2017610, 2026186, 2034762, 2043338, 2051914, 2060490, 2069066, 2077642, 2086218, 2094794, 2103370, 2111946, 2120522, 2129098, 2137674, 2146250, 2154826, 2163402, 2171978, 2180554, 2189130, 2197706, 2206282, 2214858, 2223434, 2232010, 2240586, 2249162, 2257738, 2266314, 2274890, 2283466, 2292042, 2300618, 2309194, 2317770, 2326346, 2334922, 2343498, 2352074, },
                               {2934238, 2841607, 2743966, 2641315, 2533654, 2544730, 2555806, 2566882, 2577958, 2589034, 2600110, 2611186, 2622262, 2633338, 2644414, 2655490, 2666566, 2677642, 2688718, 2699794, 2710870, 2721946, 2733022, 2744098, 2755174, 2766250, 2777326, 2788402, 2799478, 2810554, 2821630, 2832706, 2843782, 2854858, 2865934, 2877010, 2888086, 2899162, 2910238, 2921314, 2932390, 2943466, 2954542, 2965618, 2976694, 2987770, 2998846, 3009922, 3020998, 3032074, },
                               {3591938, 3476757, 3356566, 3231365, 3101154, 3114730, 3128306, 3141882, 3155458, 3169034, 3182610, 3196186, 3209762, 3223338, 3236914, 3250490, 3264066, 3277642, 3291218, 3304794, 3318370, 3331946, 3345522, 3359098, 3372674, 3386250, 3399826, 3413402, 3426978, 3440554, 3454130, 3467706, 3481282, 3494858, 3508434, 3522010, 3535586, 3549162, 3562738, 3576314, 3589890, 3603466, 3617042, 3630618, 3644194, 3657770, 3671346, 3684922, 3698498, 3712074, },
                               {4249638, 4111907, 3969166, 3821415, 3668654, 3684730, 3700806, 3716882, 3732958, 3749034, 3765110, 3781186, 3797262, 3813338, 3829414, 3845490, 3861566, 3877642, 3893718, 3909794, 3925870, 3941946, 3958022, 3974098, 3990174, 4006250, 4022326, 4038402, 4054478, 4070554, 4086630, 4102706, 4118782, 4134858, 4150934, 4167010, 4183086, 4199162, 4215238, 4231314, 4247390, 4263466, 4279542, 4295618, 4311694, 4327770, 4343846, 4359922, 4375998, 4392074, },
                               {4907338, 4747057, 4581766, 4411465, 4236154, 4254730, 4273306, 4291882, 4310458, 4329034, 4347610, 4366186, 4384762, 4403338, 4421914, 4440490, 4459066, 4477642, 4496218, 4514794, 4533370, 4551946, 4570522, 4589098, 4607674, 4626250, 4644826, 4663402, 4681978, 4700554, 4719130, 4737706, 4756282, 4774858, 4793434, 4812010, 4830586, 4849162, 4867738, 4886314, 4904890, 4923466, 4942042, 4960618, 4979194, 4997770, 5016346, 5034922, 5053498, 5072074, },
                               {5565038, 5382207, 5194366, 5001515, 4803654, 4824730, 4845806, 4866882, 4887958, 4909034, 4930110, 4951186, 4972262, 4993338, 5014414, 5035490, 5056566, 5077642, 5098718, 5119794, 5140870, 5161946, 5183022, 5204098, 5225174, 5246250, 5267326, 5288402, 5309478, 5330554, 5351630, 5372706, 5393782, 5414858, 5435934, 5457010, 5478086, 5499162, 5520238, 5541314, 5562390, 5583466, 5604542, 5625618, 5646694, 5667770, 5688846, 5709922, 5730998, 5752074, },
                               {6222738, 6017357, 5806966, 5591565, 5371154, 5394730, 5418306, 5441882, 5465458, 5489034, 5512610, 5536186, 5559762, 5583338, 5606914, 5630490, 5654066, 5677642, 5701218, 5724794, 5748370, 5771946, 5795522, 5819098, 5842674, 5866250, 5889826, 5913402, 5936978, 5960554, 5984130, 6007706, 6031282, 6054858, 6078434, 6102010, 6125586, 6149162, 6172738, 6196314, 6219890, 6243466, 6267042, 6290618, 6314194, 6337770, 6361346, 6384922, 6408498, 6432074, },
                               {440584, 440608, 435622, 425626, 410620, 413650, 416680, 419710, 422740, 425770, 428800, 431830, 434860, 437890, 440920, 443950, 446980, 450010, 453040, 456070, 459100, 462130, 465160, 468190, 471220, 474250, 477280, 480310, 483340, 486370, 489400, 492430, 495460, 498490, 501520, 504550, 507580, 510610, 513640, 516670, 519700, 522730, 525760, 528790, 531820, 534850, 537880, 540910, 543940, 546970, },
                               {947984, 923454, 893914, 859364, 819804, 823330, 826856, 830382, 833908, 837434, 840960, 844486, 848012, 851538, 855064, 858590, 862116, 865642, 869168, 872694, 876220, 879746, 883272, 886798, 890324, 893850, 897376, 900902, 904428, 907954, 911480, 915006, 918532, 922058, 925584, 929110, 932636, 936162, 939688, 943214, 946740, 950266, 953792, 957318, 960844, 964370, 967896, 971422, 974948, 978474, },
                               {1605684, 1558604, 1506514, 1449414, 1387304, 1393330, 1399356, 1405382, 1411408, 1417434, 1423460, 1429486, 1435512, 1441538, 1447564, 1453590, 1459616, 1465642, 1471668, 1477694, 1483720, 1489746, 1495772, 1501798, 1507824, 1513850, 1519876, 1525902, 1531928, 1537954, 1543980, 1550006, 1556032, 1562058, 1568084, 1574110, 1580136, 1586162, 1592188, 1598214, 1604240, 1610266, 1616292, 1622318, 1628344, 1634370, 1640396, 1646422, 1652448, 1658474, },
                               {2263384, 2193754, 2119114, 2039464, 1954804, 1963330, 1971856, 1980382, 1988908, 1997434, 2005960, 2014486, 2023012, 2031538, 2040064, 2048590, 2057116, 2065642, 2074168, 2082694, 2091220, 2099746, 2108272, 2116798, 2125324, 2133850, 2142376, 2150902, 2159428, 2167954, 2176480, 2185006, 2193532, 2202058, 2210584, 2219110, 2227636, 2236162, 2244688, 2253214, 2261740, 2270266, 2278792, 2287318, 2295844, 2304370, 2312896, 2321422, 2329948, 2338474, },
                               {2921084, 2828904, 2731714, 2629514, 2522304, 2533330, 2544356, 2555382, 2566408, 2577434, 2588460, 2599486, 2610512, 2621538, 2632564, 2643590, 2654616, 2665642, 2676668, 2687694, 2698720, 2709746, 2720772, 2731798, 2742824, 2753850, 2764876, 2775902, 2786928, 2797954, 2808980, 2820006, 2831032, 2842058, 2853084, 2864110, 2875136, 2886162, 2897188, 2908214, 2919240, 2930266, 2941292, 2952318, 2963344, 2974370, 2985396, 2996422, 3007448, 3018474, },
                               {3578784, 3464054, 3344314, 3219564, 3089804, 3103330, 3116856, 3130382, 3143908, 3157434, 3170960, 3184486, 3198012, 3211538, 3225064, 3238590, 3252116, 3265642, 3279168, 3292694, 3306220, 3319746, 3333272, 3346798, 3360324, 3373850, 3387376, 3400902, 3414428, 3427954, 3441480, 3455006, 3468532, 3482058, 3495584, 3509110, 3522636, 3536162, 3549688, 3563214, 3576740, 3590266, 3603792, 3617318, 3630844, 3644370, 3657896, 3671422, 3684948, 3698474, },
                               {4236484, 4099204, 3956914, 3809614, 3657304, 3673330, 3689356, 3705382, 3721408, 3737434, 3753460, 3769486, 3785512, 3801538, 3817564, 3833590, 3849616, 3865642, 3881668, 3897694, 3913720, 3929746, 3945772, 3961798, 3977824, 3993850, 4009876, 4025902, 4041928, 4057954, 4073980, 4090006, 4106032, 4122058, 4138084, 4154110, 4170136, 4186162, 4202188, 4218214, 4234240, 4250266, 4266292, 4282318, 4298344, 4314370, 4330396, 4346422, 4362448, 4378474, },
                               {4894184, 4734354, 4569514, 4399664, 4224804, 4243330, 4261856, 4280382, 4298908, 4317434, 4335960, 4354486, 4373012, 4391538, 4410064, 4428590, 4447116, 4465642, 4484168, 4502694, 4521220, 4539746, 4558272, 4576798, 4595324, 4613850, 4632376, 4650902, 4669428, 4687954, 4706480, 4725006, 4743532, 4762058, 4780584, 4799110, 4817636, 4836162, 4854688, 4873214, 4891740, 4910266, 4928792, 4947318, 4965844, 4984370, 5002896, 5021422, 5039948, 5058474, },
                               {5551884, 5369504, 5182114, 4989714, 4792304, 4813330, 4834356, 4855382, 4876408, 4897434, 4918460, 4939486, 4960512, 4981538, 5002564, 5023590, 5044616, 5065642, 5086668, 5107694, 5128720, 5149746, 5170772, 5191798, 5212824, 5233850, 5254876, 5275902, 5296928, 5317954, 5338980, 5360006, 5381032, 5402058, 5423084, 5444110, 5465136, 5486162, 5507188, 5528214, 5549240, 5570266, 5591292, 5612318, 5633344, 5654370, 5675396, 5696422, 5717448, 5738474, },
                               {6209584, 6004654, 5794714, 5579764, 5359804, 5383330, 5406856, 5430382, 5453908, 5477434, 5500960, 5524486, 5548012, 5571538, 5595064, 5618590, 5642116, 5665642, 5689168, 5712694, 5736220, 5759746, 5783272, 5806798, 5830324, 5853850, 5877376, 5900902, 5924428, 5947954, 5971480, 5995006, 6018532, 6042058, 6065584, 6089110, 6112636, 6136162, 6159688, 6183214, 6206740, 6230266, 6253792, 6277318, 6300844, 6324370, 6347896, 6371422, 6394948, 6418474, }};

    VEC2D_EXPECT_EQ(layer.getOutput(), expected);
}

TYPED_TEST(LayerUnitTests, DenseLayerBackpropNoReg) {
    Vec2d<TypeParam> weights;
    populateVec2dWithSequentialData(weights, 20, 20);

    Vec2d<TypeParam> biases;
    populateVec2dWithSequentialData(biases, 1, 20);

    Layers::DenseLayer<TypeParam> layer {weights, biases};
    
    Vec2d<TypeParam> inputs;
    populateVec2dWithSequentialData(inputs, 20, 20);

    layer.compute(inputs);

    Vec2d<TypeParam> dValues;
    populateVec2dWithSequentialData(dValues, 20, 20);

    layer.backward(dValues);

    Vec2d<TypeParam> expectedDWeights {{988000, 991800, 995600, 999400, 1003200, 1007000, 1010800, 1014600, 1018400, 1022200, 1026000, 1029800, 1033600, 1037400, 1041200, 1045000, 1048800, 1052600, 1056400, 1060200, },
                                       {991800, 995620, 999440, 1003260, 1007080, 1010900, 1014720, 1018540, 1022360, 1026180, 1030000, 1033820, 1037640, 1041460, 1045280, 1049100, 1052920, 1056740, 1060560, 1064380, },
                                       {995600, 999440, 1003280, 1007120, 1010960, 1014800, 1018640, 1022480, 1026320, 1030160, 1034000, 1037840, 1041680, 1045520, 1049360, 1053200, 1057040, 1060880, 1064720, 1068560, },
                                       {999400, 1003260, 1007120, 1010980, 1014840, 1018700, 1022560, 1026420, 1030280, 1034140, 1038000, 1041860, 1045720, 1049580, 1053440, 1057300, 1061160, 1065020, 1068880, 1072740, },
                                       {1003200, 1007080, 1010960, 1014840, 1018720, 1022600, 1026480, 1030360, 1034240, 1038120, 1042000, 1045880, 1049760, 1053640, 1057520, 1061400, 1065280, 1069160, 1073040, 1076920, },
                                       {1007000, 1010900, 1014800, 1018700, 1022600, 1026500, 1030400, 1034300, 1038200, 1042100, 1046000, 1049900, 1053800, 1057700, 1061600, 1065500, 1069400, 1073300, 1077200, 1081100, },
                                       {1010800, 1014720, 1018640, 1022560, 1026480, 1030400, 1034320, 1038240, 1042160, 1046080, 1050000, 1053920, 1057840, 1061760, 1065680, 1069600, 1073520, 1077440, 1081360, 1085280, },
                                       {1014600, 1018540, 1022480, 1026420, 1030360, 1034300, 1038240, 1042180, 1046120, 1050060, 1054000, 1057940, 1061880, 1065820, 1069760, 1073700, 1077640, 1081580, 1085520, 1089460, },
                                       {1018400, 1022360, 1026320, 1030280, 1034240, 1038200, 1042160, 1046120, 1050080, 1054040, 1058000, 1061960, 1065920, 1069880, 1073840, 1077800, 1081760, 1085720, 1089680, 1093640, },
                                       {1022200, 1026180, 1030160, 1034140, 1038120, 1042100, 1046080, 1050060, 1054040, 1058020, 1062000, 1065980, 1069960, 1073940, 1077920, 1081900, 1085880, 1089860, 1093840, 1097820, },
                                       {1026000, 1030000, 1034000, 1038000, 1042000, 1046000, 1050000, 1054000, 1058000, 1062000, 1066000, 1070000, 1074000, 1078000, 1082000, 1086000, 1090000, 1094000, 1098000, 1102000, },
                                       {1029800, 1033820, 1037840, 1041860, 1045880, 1049900, 1053920, 1057940, 1061960, 1065980, 1070000, 1074020, 1078040, 1082060, 1086080, 1090100, 1094120, 1098140, 1102160, 1106180, },
                                       {1033600, 1037640, 1041680, 1045720, 1049760, 1053800, 1057840, 1061880, 1065920, 1069960, 1074000, 1078040, 1082080, 1086120, 1090160, 1094200, 1098240, 1102280, 1106320, 1110360, },
                                       {1037400, 1041460, 1045520, 1049580, 1053640, 1057700, 1061760, 1065820, 1069880, 1073940, 1078000, 1082060, 1086120, 1090180, 1094240, 1098300, 1102360, 1106420, 1110480, 1114540, },
                                       {1041200, 1045280, 1049360, 1053440, 1057520, 1061600, 1065680, 1069760, 1073840, 1077920, 1082000, 1086080, 1090160, 1094240, 1098320, 1102400, 1106480, 1110560, 1114640, 1118720, },
                                       {1045000, 1049100, 1053200, 1057300, 1061400, 1065500, 1069600, 1073700, 1077800, 1081900, 1086000, 1090100, 1094200, 1098300, 1102400, 1106500, 1110600, 1114700, 1118800, 1122900, },
                                       {1048800, 1052920, 1057040, 1061160, 1065280, 1069400, 1073520, 1077640, 1081760, 1085880, 1090000, 1094120, 1098240, 1102360, 1106480, 1110600, 1114720, 1118840, 1122960, 1127080, },
                                       {1052600, 1056740, 1060880, 1065020, 1069160, 1073300, 1077440, 1081580, 1085720, 1089860, 1094000, 1098140, 1102280, 1106420, 1110560, 1114700, 1118840, 1122980, 1127120, 1131260, },
                                       {1056400, 1060560, 1064720, 1068880, 1073040, 1077200, 1081360, 1085520, 1089680, 1093840, 1098000, 1102160, 1106320, 1110480, 1114640, 1118800, 1122960, 1127120, 1131280, 1135440, },
                                       {1060200, 1064380, 1068560, 1072740, 1076920, 1081100, 1085280, 1089460, 1093640, 1097820, 1102000, 1106180, 1110360, 1114540, 1118720, 1122900, 1127080, 1131260, 1135440, 1139620, }};
    VEC2D_EXPECT_EQ(layer.getDWeights(), expectedDWeights);

    Vec2d<TypeParam> expectedDBiases {{3800, 3820, 3840, 3860, 3880, 3900, 3920, 3940, 3960, 3980, 4000, 4020, 4040, 4060, 4080, 4100, 4120, 4140, 4160, 4180, }};
    VEC2D_EXPECT_EQ(layer.getDBiases(), expectedDBiases);

    Vec2d<TypeParam> expectedDInputs {{2470, 6270, 10070, 13870, 17670, 21470, 25270, 29070, 32870, 36670, 40470, 44270, 48070, 51870, 55670, 59470, 63270, 67070, 70870, 74670, },
                                      {6270, 18070, 29870, 41670, 53470, 65270, 77070, 88870, 100670, 112470, 124270, 136070, 147870, 159670, 171470, 183270, 195070, 206870, 218670, 230470, },
                                      {10070, 29870, 49670, 69470, 89270, 109070, 128870, 148670, 168470, 188270, 208070, 227870, 247670, 267470, 287270, 307070, 326870, 346670, 366470, 386270, },
                                      {13870, 41670, 69470, 97270, 125070, 152870, 180670, 208470, 236270, 264070, 291870, 319670, 347470, 375270, 403070, 430870, 458670, 486470, 514270, 542070, },
                                      {17670, 53470, 89270, 125070, 160870, 196670, 232470, 268270, 304070, 339870, 375670, 411470, 447270, 483070, 518870, 554670, 590470, 626270, 662070, 697870, },
                                      {21470, 65270, 109070, 152870, 196670, 240470, 284270, 328070, 371870, 415670, 459470, 503270, 547070, 590870, 634670, 678470, 722270, 766070, 809870, 853670, },
                                      {25270, 77070, 128870, 180670, 232470, 284270, 336070, 387870, 439670, 491470, 543270, 595070, 646870, 698670, 750470, 802270, 854070, 905870, 957670, 1009470, },
                                      {29070, 88870, 148670, 208470, 268270, 328070, 387870, 447670, 507470, 567270, 627070, 686870, 746670, 806470, 866270, 926070, 985870, 1045670, 1105470, 1165270, },
                                      {32870, 100670, 168470, 236270, 304070, 371870, 439670, 507470, 575270, 643070, 710870, 778670, 846470, 914270, 982070, 1049870, 1117670, 1185470, 1253270, 1321070, },
                                      {36670, 112470, 188270, 264070, 339870, 415670, 491470, 567270, 643070, 718870, 794670, 870470, 946270, 1022070, 1097870, 1173670, 1249470, 1325270, 1401070, 1476870, },
                                      {40470, 124270, 208070, 291870, 375670, 459470, 543270, 627070, 710870, 794670, 878470, 962270, 1046070, 1129870, 1213670, 1297470, 1381270, 1465070, 1548870, 1632670, },
                                      {44270, 136070, 227870, 319670, 411470, 503270, 595070, 686870, 778670, 870470, 962270, 1054070, 1145870, 1237670, 1329470, 1421270, 1513070, 1604870, 1696670, 1788470, },
                                      {48070, 147870, 247670, 347470, 447270, 547070, 646870, 746670, 846470, 946270, 1046070, 1145870, 1245670, 1345470, 1445270, 1545070, 1644870, 1744670, 1844470, 1944270, },
                                      {51870, 159670, 267470, 375270, 483070, 590870, 698670, 806470, 914270, 1022070, 1129870, 1237670, 1345470, 1453270, 1561070, 1668870, 1776670, 1884470, 1992270, 2100070, },
                                      {55670, 171470, 287270, 403070, 518870, 634670, 750470, 866270, 982070, 1097870, 1213670, 1329470, 1445270, 1561070, 1676870, 1792670, 1908470, 2024270, 2140070, 2255870, },
                                      {59470, 183270, 307070, 430870, 554670, 678470, 802270, 926070, 1049870, 1173670, 1297470, 1421270, 1545070, 1668870, 1792670, 1916470, 2040270, 2164070, 2287870, 2411670, },
                                      {63270, 195070, 326870, 458670, 590470, 722270, 854070, 985870, 1117670, 1249470, 1381270, 1513070, 1644870, 1776670, 1908470, 2040270, 2172070, 2303870, 2435670, 2567470, },
                                      {67070, 206870, 346670, 486470, 626270, 766070, 905870, 1045670, 1185470, 1325270, 1465070, 1604870, 1744670, 1884470, 2024270, 2164070, 2303870, 2443670, 2583470, 2723270, },
                                      {70870, 218670, 366470, 514270, 662070, 809870, 957670, 1105470, 1253270, 1401070, 1548870, 1696670, 1844470, 1992270, 2140070, 2287870, 2435670, 2583470, 2731270, 2879070, },
                                      {74670, 230470, 386270, 542070, 697870, 853670, 1009470, 1165270, 1321070, 1476870, 1632670, 1788470, 1944270, 2100070, 2255870, 2411670, 2567470, 2723270, 2879070, 3034870,}};
    VEC2D_EXPECT_EQ(layer.getDInputs(), expectedDInputs);
}

TYPED_TEST(LayerUnitTests, DenseLayerBackpropL1Reg) {
    Vec2d<TypeParam> weights;
    populateVec2dWithSequentialData(weights, 20, 20);

    Vec2d<TypeParam> biases;
    populateVec2dWithSequentialData(biases, 1, 20);

    Layers::DenseLayer<TypeParam> layer {weights, biases, 1, 0, 2, 0};
    
    Vec2d<TypeParam> inputs;
    populateVec2dWithSequentialData(inputs, 20, 20);

    layer.compute(inputs);

    Vec2d<TypeParam> dValues;
    populateVec2dWithSequentialData(dValues, 20, 20);

    layer.backward(dValues);

    Vec2d<TypeParam> expectedDWeights {{988001, 991801, 995601, 999401, 1003201, 1007001, 1010801, 1014601, 1018401, 1022201, 1026001, 1029801, 1033601, 1037401, 1041201, 1045001, 1048801, 1052601, 1056401, 1060201, },
                                       {991801, 995621, 999441, 1003261, 1007081, 1010901, 1014721, 1018541, 1022361, 1026181, 1030001, 1033821, 1037641, 1041461, 1045281, 1049101, 1052921, 1056741, 1060561, 1064381, },
                                       {995601, 999441, 1003281, 1007121, 1010961, 1014801, 1018641, 1022481, 1026321, 1030161, 1034001, 1037841, 1041681, 1045521, 1049361, 1053201, 1057041, 1060881, 1064721, 1068561, },
                                       {999401, 1003261, 1007121, 1010981, 1014841, 1018701, 1022561, 1026421, 1030281, 1034141, 1038001, 1041861, 1045721, 1049581, 1053441, 1057301, 1061161, 1065021, 1068881, 1072741, },
                                       {1003201, 1007081, 1010961, 1014841, 1018721, 1022601, 1026481, 1030361, 1034241, 1038121, 1042001, 1045881, 1049761, 1053641, 1057521, 1061401, 1065281, 1069161, 1073041, 1076921, },
                                       {1007001, 1010901, 1014801, 1018701, 1022601, 1026501, 1030401, 1034301, 1038201, 1042101, 1046001, 1049901, 1053801, 1057701, 1061601, 1065501, 1069401, 1073301, 1077201, 1081101, },
                                       {1010801, 1014721, 1018641, 1022561, 1026481, 1030401, 1034321, 1038241, 1042161, 1046081, 1050001, 1053921, 1057841, 1061761, 1065681, 1069601, 1073521, 1077441, 1081361, 1085281, },
                                       {1014601, 1018541, 1022481, 1026421, 1030361, 1034301, 1038241, 1042181, 1046121, 1050061, 1054001, 1057941, 1061881, 1065821, 1069761, 1073701, 1077641, 1081581, 1085521, 1089461, },
                                       {1018401, 1022361, 1026321, 1030281, 1034241, 1038201, 1042161, 1046121, 1050081, 1054041, 1058001, 1061961, 1065921, 1069881, 1073841, 1077801, 1081761, 1085721, 1089681, 1093641, },
                                       {1022201, 1026181, 1030161, 1034141, 1038121, 1042101, 1046081, 1050061, 1054041, 1058021, 1062001, 1065981, 1069961, 1073941, 1077921, 1081901, 1085881, 1089861, 1093841, 1097821, },
                                       {1026001, 1030001, 1034001, 1038001, 1042001, 1046001, 1050001, 1054001, 1058001, 1062001, 1066001, 1070001, 1074001, 1078001, 1082001, 1086001, 1090001, 1094001, 1098001, 1102001, },
                                       {1029801, 1033821, 1037841, 1041861, 1045881, 1049901, 1053921, 1057941, 1061961, 1065981, 1070001, 1074021, 1078041, 1082061, 1086081, 1090101, 1094121, 1098141, 1102161, 1106181, },
                                       {1033601, 1037641, 1041681, 1045721, 1049761, 1053801, 1057841, 1061881, 1065921, 1069961, 1074001, 1078041, 1082081, 1086121, 1090161, 1094201, 1098241, 1102281, 1106321, 1110361, },
                                       {1037401, 1041461, 1045521, 1049581, 1053641, 1057701, 1061761, 1065821, 1069881, 1073941, 1078001, 1082061, 1086121, 1090181, 1094241, 1098301, 1102361, 1106421, 1110481, 1114541, },
                                       {1041201, 1045281, 1049361, 1053441, 1057521, 1061601, 1065681, 1069761, 1073841, 1077921, 1082001, 1086081, 1090161, 1094241, 1098321, 1102401, 1106481, 1110561, 1114641, 1118721, },
                                       {1045001, 1049101, 1053201, 1057301, 1061401, 1065501, 1069601, 1073701, 1077801, 1081901, 1086001, 1090101, 1094201, 1098301, 1102401, 1106501, 1110601, 1114701, 1118801, 1122901, },
                                       {1048801, 1052921, 1057041, 1061161, 1065281, 1069401, 1073521, 1077641, 1081761, 1085881, 1090001, 1094121, 1098241, 1102361, 1106481, 1110601, 1114721, 1118841, 1122961, 1127081, },
                                       {1052601, 1056741, 1060881, 1065021, 1069161, 1073301, 1077441, 1081581, 1085721, 1089861, 1094001, 1098141, 1102281, 1106421, 1110561, 1114701, 1118841, 1122981, 1127121, 1131261, },
                                       {1056401, 1060561, 1064721, 1068881, 1073041, 1077201, 1081361, 1085521, 1089681, 1093841, 1098001, 1102161, 1106321, 1110481, 1114641, 1118801, 1122961, 1127121, 1131281, 1135441, },
                                       {1060201, 1064381, 1068561, 1072741, 1076921, 1081101, 1085281, 1089461, 1093641, 1097821, 1102001, 1106181, 1110361, 1114541, 1118721, 1122901, 1127081, 1131261, 1135441, 1139621,}};
    VEC2D_EXPECT_EQ(layer.getDWeights(), expectedDWeights);

    Vec2d<TypeParam> expectedDBiases {{3802, 3822, 3842, 3862, 3882, 3902, 3922, 3942, 3962, 3982, 4002, 4022, 4042, 4062, 4082, 4102, 4122, 4142, 4162, 4182,}};
    VEC2D_EXPECT_EQ(layer.getDBiases(), expectedDBiases);

    Vec2d<TypeParam> expectedDInputs {{2470, 6270, 10070, 13870, 17670, 21470, 25270, 29070, 32870, 36670, 40470, 44270, 48070, 51870, 55670, 59470, 63270, 67070, 70870, 74670, },
                                      {6270, 18070, 29870, 41670, 53470, 65270, 77070, 88870, 100670, 112470, 124270, 136070, 147870, 159670, 171470, 183270, 195070, 206870, 218670, 230470, },
                                      {10070, 29870, 49670, 69470, 89270, 109070, 128870, 148670, 168470, 188270, 208070, 227870, 247670, 267470, 287270, 307070, 326870, 346670, 366470, 386270, },
                                      {13870, 41670, 69470, 97270, 125070, 152870, 180670, 208470, 236270, 264070, 291870, 319670, 347470, 375270, 403070, 430870, 458670, 486470, 514270, 542070, },
                                      {17670, 53470, 89270, 125070, 160870, 196670, 232470, 268270, 304070, 339870, 375670, 411470, 447270, 483070, 518870, 554670, 590470, 626270, 662070, 697870, },
                                      {21470, 65270, 109070, 152870, 196670, 240470, 284270, 328070, 371870, 415670, 459470, 503270, 547070, 590870, 634670, 678470, 722270, 766070, 809870, 853670, },
                                      {25270, 77070, 128870, 180670, 232470, 284270, 336070, 387870, 439670, 491470, 543270, 595070, 646870, 698670, 750470, 802270, 854070, 905870, 957670, 1009470, },
                                      {29070, 88870, 148670, 208470, 268270, 328070, 387870, 447670, 507470, 567270, 627070, 686870, 746670, 806470, 866270, 926070, 985870, 1045670, 1105470, 1165270, },
                                      {32870, 100670, 168470, 236270, 304070, 371870, 439670, 507470, 575270, 643070, 710870, 778670, 846470, 914270, 982070, 1049870, 1117670, 1185470, 1253270, 1321070, },
                                      {36670, 112470, 188270, 264070, 339870, 415670, 491470, 567270, 643070, 718870, 794670, 870470, 946270, 1022070, 1097870, 1173670, 1249470, 1325270, 1401070, 1476870, },
                                      {40470, 124270, 208070, 291870, 375670, 459470, 543270, 627070, 710870, 794670, 878470, 962270, 1046070, 1129870, 1213670, 1297470, 1381270, 1465070, 1548870, 1632670, },
                                      {44270, 136070, 227870, 319670, 411470, 503270, 595070, 686870, 778670, 870470, 962270, 1054070, 1145870, 1237670, 1329470, 1421270, 1513070, 1604870, 1696670, 1788470, },
                                      {48070, 147870, 247670, 347470, 447270, 547070, 646870, 746670, 846470, 946270, 1046070, 1145870, 1245670, 1345470, 1445270, 1545070, 1644870, 1744670, 1844470, 1944270, },
                                      {51870, 159670, 267470, 375270, 483070, 590870, 698670, 806470, 914270, 1022070, 1129870, 1237670, 1345470, 1453270, 1561070, 1668870, 1776670, 1884470, 1992270, 2100070, },
                                      {55670, 171470, 287270, 403070, 518870, 634670, 750470, 866270, 982070, 1097870, 1213670, 1329470, 1445270, 1561070, 1676870, 1792670, 1908470, 2024270, 2140070, 2255870, },
                                      {59470, 183270, 307070, 430870, 554670, 678470, 802270, 926070, 1049870, 1173670, 1297470, 1421270, 1545070, 1668870, 1792670, 1916470, 2040270, 2164070, 2287870, 2411670, },
                                      {63270, 195070, 326870, 458670, 590470, 722270, 854070, 985870, 1117670, 1249470, 1381270, 1513070, 1644870, 1776670, 1908470, 2040270, 2172070, 2303870, 2435670, 2567470, },
                                      {67070, 206870, 346670, 486470, 626270, 766070, 905870, 1045670, 1185470, 1325270, 1465070, 1604870, 1744670, 1884470, 2024270, 2164070, 2303870, 2443670, 2583470, 2723270, },
                                      {70870, 218670, 366470, 514270, 662070, 809870, 957670, 1105470, 1253270, 1401070, 1548870, 1696670, 1844470, 1992270, 2140070, 2287870, 2435670, 2583470, 2731270, 2879070, },
                                      {74670, 230470, 386270, 542070, 697870, 853670, 1009470, 1165270, 1321070, 1476870, 1632670, 1788470, 1944270, 2100070, 2255870, 2411670, 2567470, 2723270, 2879070, 3034870, }};
    VEC2D_EXPECT_EQ(layer.getDInputs(), expectedDInputs);
}

TYPED_TEST(LayerUnitTests, DenseLayerBackpropL2Reg) {
    Vec2d<TypeParam> weights;
    populateVec2dWithSequentialData(weights, 20, 20);

    Vec2d<TypeParam> biases;
    populateVec2dWithSequentialData(biases, 1, 20);

    Layers::DenseLayer<TypeParam> layer {weights, biases, 1, 3, 2, 4};
    
    Vec2d<TypeParam> inputs;
    populateVec2dWithSequentialData(inputs, 20, 20);

    layer.compute(inputs);

    Vec2d<TypeParam> dValues;
    populateVec2dWithSequentialData(dValues, 20, 20);

    layer.backward(dValues);

    Vec2d<TypeParam> expectedDWeights {{988001, 991807, 995613, 999419, 1003225, 1007031, 1010837, 1014643, 1018449, 1022255, 1026061, 1029867, 1033673, 1037479, 1041285, 1045091, 1048897, 1052703, 1056509, 1060315, },
                                       {991921, 995747, 999573, 1003399, 1007225, 1011051, 1014877, 1018703, 1022529, 1026355, 1030181, 1034007, 1037833, 1041659, 1045485, 1049311, 1053137, 1056963, 1060789, 1064615, },
                                       {995841, 999687, 1003533, 1007379, 1011225, 1015071, 1018917, 1022763, 1026609, 1030455, 1034301, 1038147, 1041993, 1045839, 1049685, 1053531, 1057377, 1061223, 1065069, 1068915, },
                                       {999761, 1003627, 1007493, 1011359, 1015225, 1019091, 1022957, 1026823, 1030689, 1034555, 1038421, 1042287, 1046153, 1050019, 1053885, 1057751, 1061617, 1065483, 1069349, 1073215, },
                                       {1003681, 1007567, 1011453, 1015339, 1019225, 1023111, 1026997, 1030883, 1034769, 1038655, 1042541, 1046427, 1050313, 1054199, 1058085, 1061971, 1065857, 1069743, 1073629, 1077515, },
                                       {1007601, 1011507, 1015413, 1019319, 1023225, 1027131, 1031037, 1034943, 1038849, 1042755, 1046661, 1050567, 1054473, 1058379, 1062285, 1066191, 1070097, 1074003, 1077909, 1081815, },
                                       {1011521, 1015447, 1019373, 1023299, 1027225, 1031151, 1035077, 1039003, 1042929, 1046855, 1050781, 1054707, 1058633, 1062559, 1066485, 1070411, 1074337, 1078263, 1082189, 1086115, },
                                       {1015441, 1019387, 1023333, 1027279, 1031225, 1035171, 1039117, 1043063, 1047009, 1050955, 1054901, 1058847, 1062793, 1066739, 1070685, 1074631, 1078577, 1082523, 1086469, 1090415, },
                                       {1019361, 1023327, 1027293, 1031259, 1035225, 1039191, 1043157, 1047123, 1051089, 1055055, 1059021, 1062987, 1066953, 1070919, 1074885, 1078851, 1082817, 1086783, 1090749, 1094715, },
                                       {1023281, 1027267, 1031253, 1035239, 1039225, 1043211, 1047197, 1051183, 1055169, 1059155, 1063141, 1067127, 1071113, 1075099, 1079085, 1083071, 1087057, 1091043, 1095029, 1099015, },
                                       {1027201, 1031207, 1035213, 1039219, 1043225, 1047231, 1051237, 1055243, 1059249, 1063255, 1067261, 1071267, 1075273, 1079279, 1083285, 1087291, 1091297, 1095303, 1099309, 1103315, },
                                       {1031121, 1035147, 1039173, 1043199, 1047225, 1051251, 1055277, 1059303, 1063329, 1067355, 1071381, 1075407, 1079433, 1083459, 1087485, 1091511, 1095537, 1099563, 1103589, 1107615, },
                                       {1035041, 1039087, 1043133, 1047179, 1051225, 1055271, 1059317, 1063363, 1067409, 1071455, 1075501, 1079547, 1083593, 1087639, 1091685, 1095731, 1099777, 1103823, 1107869, 1111915, },
                                       {1038961, 1043027, 1047093, 1051159, 1055225, 1059291, 1063357, 1067423, 1071489, 1075555, 1079621, 1083687, 1087753, 1091819, 1095885, 1099951, 1104017, 1108083, 1112149, 1116215, },
                                       {1042881, 1046967, 1051053, 1055139, 1059225, 1063311, 1067397, 1071483, 1075569, 1079655, 1083741, 1087827, 1091913, 1095999, 1100085, 1104171, 1108257, 1112343, 1116429, 1120515, },
                                       {1046801, 1050907, 1055013, 1059119, 1063225, 1067331, 1071437, 1075543, 1079649, 1083755, 1087861, 1091967, 1096073, 1100179, 1104285, 1108391, 1112497, 1116603, 1120709, 1124815, },
                                       {1050721, 1054847, 1058973, 1063099, 1067225, 1071351, 1075477, 1079603, 1083729, 1087855, 1091981, 1096107, 1100233, 1104359, 1108485, 1112611, 1116737, 1120863, 1124989, 1129115, },
                                       {1054641, 1058787, 1062933, 1067079, 1071225, 1075371, 1079517, 1083663, 1087809, 1091955, 1096101, 1100247, 1104393, 1108539, 1112685, 1116831, 1120977, 1125123, 1129269, 1133415, },
                                       {1058561, 1062727, 1066893, 1071059, 1075225, 1079391, 1083557, 1087723, 1091889, 1096055, 1100221, 1104387, 1108553, 1112719, 1116885, 1121051, 1125217, 1129383, 1133549, 1137715, },
                                       {1062481, 1066667, 1070853, 1075039, 1079225, 1083411, 1087597, 1091783, 1095969, 1100155, 1104341, 1108527, 1112713, 1116899, 1121085, 1125271, 1129457, 1133643, 1137829, 1142015,}};
    VEC2D_EXPECT_EQ(layer.getDWeights(), expectedDWeights);

    Vec2d<TypeParam> expectedDBiases {{3802, 3830, 3858, 3886, 3914, 3942, 3970, 3998, 4026, 4054, 4082, 4110, 4138, 4166, 4194, 4222, 4250, 4278, 4306, 4334,}};
    VEC2D_EXPECT_EQ(layer.getDBiases(), expectedDBiases);

    Vec2d<TypeParam> expectedDInputs {{2470, 6270, 10070, 13870, 17670, 21470, 25270, 29070, 32870, 36670, 40470, 44270, 48070, 51870, 55670, 59470, 63270, 67070, 70870, 74670, },
                                      {6270, 18070, 29870, 41670, 53470, 65270, 77070, 88870, 100670, 112470, 124270, 136070, 147870, 159670, 171470, 183270, 195070, 206870, 218670, 230470, },
                                      {10070, 29870, 49670, 69470, 89270, 109070, 128870, 148670, 168470, 188270, 208070, 227870, 247670, 267470, 287270, 307070, 326870, 346670, 366470, 386270, },
                                      {13870, 41670, 69470, 97270, 125070, 152870, 180670, 208470, 236270, 264070, 291870, 319670, 347470, 375270, 403070, 430870, 458670, 486470, 514270, 542070, },
                                      {17670, 53470, 89270, 125070, 160870, 196670, 232470, 268270, 304070, 339870, 375670, 411470, 447270, 483070, 518870, 554670, 590470, 626270, 662070, 697870, },
                                      {21470, 65270, 109070, 152870, 196670, 240470, 284270, 328070, 371870, 415670, 459470, 503270, 547070, 590870, 634670, 678470, 722270, 766070, 809870, 853670, },
                                      {25270, 77070, 128870, 180670, 232470, 284270, 336070, 387870, 439670, 491470, 543270, 595070, 646870, 698670, 750470, 802270, 854070, 905870, 957670, 1009470, },
                                      {29070, 88870, 148670, 208470, 268270, 328070, 387870, 447670, 507470, 567270, 627070, 686870, 746670, 806470, 866270, 926070, 985870, 1045670, 1105470, 1165270, },
                                      {32870, 100670, 168470, 236270, 304070, 371870, 439670, 507470, 575270, 643070, 710870, 778670, 846470, 914270, 982070, 1049870, 1117670, 1185470, 1253270, 1321070, },
                                      {36670, 112470, 188270, 264070, 339870, 415670, 491470, 567270, 643070, 718870, 794670, 870470, 946270, 1022070, 1097870, 1173670, 1249470, 1325270, 1401070, 1476870, },
                                      {40470, 124270, 208070, 291870, 375670, 459470, 543270, 627070, 710870, 794670, 878470, 962270, 1046070, 1129870, 1213670, 1297470, 1381270, 1465070, 1548870, 1632670, },
                                      {44270, 136070, 227870, 319670, 411470, 503270, 595070, 686870, 778670, 870470, 962270, 1054070, 1145870, 1237670, 1329470, 1421270, 1513070, 1604870, 1696670, 1788470, },
                                      {48070, 147870, 247670, 347470, 447270, 547070, 646870, 746670, 846470, 946270, 1046070, 1145870, 1245670, 1345470, 1445270, 1545070, 1644870, 1744670, 1844470, 1944270, },
                                      {51870, 159670, 267470, 375270, 483070, 590870, 698670, 806470, 914270, 1022070, 1129870, 1237670, 1345470, 1453270, 1561070, 1668870, 1776670, 1884470, 1992270, 2100070, },
                                      {55670, 171470, 287270, 403070, 518870, 634670, 750470, 866270, 982070, 1097870, 1213670, 1329470, 1445270, 1561070, 1676870, 1792670, 1908470, 2024270, 2140070, 2255870, },
                                      {59470, 183270, 307070, 430870, 554670, 678470, 802270, 926070, 1049870, 1173670, 1297470, 1421270, 1545070, 1668870, 1792670, 1916470, 2040270, 2164070, 2287870, 2411670, },
                                      {63270, 195070, 326870, 458670, 590470, 722270, 854070, 985870, 1117670, 1249470, 1381270, 1513070, 1644870, 1776670, 1908470, 2040270, 2172070, 2303870, 2435670, 2567470, },
                                      {67070, 206870, 346670, 486470, 626270, 766070, 905870, 1045670, 1185470, 1325270, 1465070, 1604870, 1744670, 1884470, 2024270, 2164070, 2303870, 2443670, 2583470, 2723270, },
                                      {70870, 218670, 366470, 514270, 662070, 809870, 957670, 1105470, 1253270, 1401070, 1548870, 1696670, 1844470, 1992270, 2140070, 2287870, 2435670, 2583470, 2731270, 2879070, },
                                      {74670, 230470, 386270, 542070, 697870, 853670, 1009470, 1165270, 1321070, 1476870, 1632670, 1788470, 1944270, 2100070, 2255870, 2411670, 2567470, 2723270, 2879070, 3034870, }};
    VEC2D_EXPECT_EQ(layer.getDInputs(), expectedDInputs);
}

TYPED_TEST(LayerUnitTests, DropoutLayerComputeTrain) {
    Layers::DropoutLayer<TypeParam> layer {0.2};
    
    Vec2d<TypeParam> inputs;
    populateVec2dWithSequentialData(inputs, 50, 50, 1);

    layer.compute(inputs, LayerMode::Training);

    auto output = layer.getOutput();

    EXPECT_EQ(output.size(), 50);
    EXPECT_EQ(output[0].size(), 50);

    TypeParam zero_count = 0;
    for (int i = 0; i < output.size(); i++) {
        for (int j = 0; j < output[i].size(); j++) {
            if (output[i][j] == (TypeParam)0) zero_count++;
        }
    }
    TypeParam actual_rate = zero_count / 2500;

    EXPECT_NEAR(actual_rate, 0.2, 0.05);
}

TYPED_TEST(LayerUnitTests, DropoutLayerComputeEval) {
    Layers::DropoutLayer<TypeParam> layer {0.2};
    
    Vec2d<TypeParam> inputs;
    populateVec2dWithSequentialData(inputs, 50, 50, 1);

    layer.compute(inputs, LayerMode::Eval);

    VEC2D_EXPECT_EQ(layer.getOutput(), inputs);
}

TYPED_TEST(LayerUnitTests, DropoutLayerBackprop) {
    Layers::DropoutLayer<TypeParam> layer {0.3};
    
    Vec2d<TypeParam> inputs;
    populateVec2dWithSequentialData(inputs, 50, 50, 1);

    layer.compute(inputs, LayerMode::Training);

    Vec2d<TypeParam> dValues;
    populateVec2dWithSequentialData(dValues, 50, 50, 1);

    layer.backward(dValues);

    auto dInputs = layer.getDInputs();

    EXPECT_EQ(dInputs.size(), 50);
    EXPECT_EQ(dInputs[0].size(), 50);

    TypeParam zero_count = 0;
    for (int i = 0; i < dInputs.size(); i++) {
        for (int j = 0; j < dInputs[i].size(); j++) {
            if (dInputs[i][j] == (TypeParam)0) zero_count++;
        }
    }
    TypeParam actual_rate = zero_count / 2500;

    EXPECT_NEAR(actual_rate, 0.3, 0.05);
}

TYPED_TEST(LayerUnitTests, InputLayerCompute) {
    Layers::InputLayer<TypeParam> layer {};

    Vec2d<TypeParam> inputs;
    populateVec2dWithSequentialData(inputs, 50, 50);

    layer.compute(inputs);

    VEC2D_EXPECT_EQ(layer.getOutput(), inputs);
}

TYPED_TEST(LayerUnitTests, InputLayerBackprop) {
    Layers::InputLayer<TypeParam> layer {};

    Vec2d<TypeParam> inputs;
    populateVec2dWithSequentialData(inputs, 50, 50);

    layer.compute(inputs);

    Vec2d<TypeParam> dValues;
    populateVec2dWithSequentialData(dValues, 50, 50);

    VEC2D_EXPECT_EQ(layer.getOutput(), inputs);
}